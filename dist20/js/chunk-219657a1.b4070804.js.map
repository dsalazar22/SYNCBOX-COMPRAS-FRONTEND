{"version":3,"sources":["webpack:///./src/components/i40/js/iplanning.js","webpack:///./src/components/sbx/planning/grload.vue?0fda","webpack:///src/components/sbx/planning/grload.vue","webpack:///./src/components/sbx/planning/grload.vue?fa30","webpack:///./src/components/sbx/planning/grload.vue","webpack:///./src/vendor/libs/sweet-modal-vue/sweet-modal-vue.scss?2d3d","webpack:///./node_modules/vue-multiselect/dist/vue-multiselect.min.css?71e7"],"names":["axiosConfig","headers","localStorage","getItem","JSON","parse","token","infoplanning","holidays","info","actions","axios","post","planning","capabilities","calendarcontroller","workstationload","get","workstationslots","getplanninginfo","getinventary","getinventarydict","getinventaryproduct","code","getinventarydetail","getcalendarmps","getKeepCapacity","removeorderplanned","getinforesources","getorderplanned","deleteorderplanned","recoveryorderplanned","setorderplanned","content","sandbox_planning","removesandbox","operationslots","idorder","mount","explosionCode","deleteop","changepriority","changestatusactivity","addworkstation","remoworkstation","getfullinfocapacity","setstandard","opp","pxh","render","_vm","this","_h","$createElement","_c","_self","staticClass","_v","attrs","workstationGroup","model","value","callback","$$v","selectedGroup","expression","on","$event","load_groups_ws","load_groups_per_month_ws","ref","slot","deleteRecord","closeDeleteRecord","staticRenderFns","component"],"mappings":"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","file":"js/chunk-219657a1.b4070804.js","sourcesContent":["\nimport axios from 'axios'\nimport {planning} from './globals'\nlet axiosConfig = {\n  headers: {\n    'Authorization': localStorage.getItem('syncbox.cloud') == null ? '' : JSON.parse(localStorage.getItem('syncbox.cloud')).token\n  }\n}\n\nvar infoplanning = {\n  holidays: function (info, actions) {\n    return axios.post(planning + 'customcalendar/' + actions, info, axiosConfig)\n  },\n\n  capabilities: function (info, actions) {\n    return axios.post(planning + 'capabilities/' + actions, info, axiosConfig)\n  },\n\n  calendarcontroller: function (info, actions) {\n    return axios.post(planning + 'calendarcontroller/' + actions, info, axiosConfig)\n  },\n\n  workstationload: function (actions) {\n    return axios.get(planning + 'workstationload/' + actions, axiosConfig)\n  },\n\n  workstationslots: function (actions) {\n    return axios.get(planning + 'workstationslots/' + actions, axiosConfig)\n  },\n\n  getplanninginfo: function (info, actions) {\n    return axios.post(planning + 'planninginfo/' + actions, info, axiosConfig)\n  },\n\n  getinventary: function () {\n    return axios.get(planning + 'getinventory', axiosConfig)\n  },\n\n  getinventarydict: function () {\n    return axios.get(planning + 'getinventorydict', axiosConfig)\n  },\n\n  getinventaryproduct: function (code) {\n    return axios.get(planning + 'getinventoryproduct/'+code, axiosConfig)\n  },\n\n  getinventarydetail: function (info, actions) {\n    return axios.post(planning + 'getcodedetailinvline/'+actions, info, axiosConfig)\n  },\n\n  getcalendarmps: function (info, actions) {\n    return axios.post(planning + 'getcalendarmps/'+actions, info, axiosConfig)\n  },\n\n  getKeepCapacity: function (info, actions) {\n    return axios.post(planning + 'keepcapacity', info, axiosConfig)\n  },\n\n  removeorderplanned: function (info) {\n    return axios.get(planning + 'removeorderplanned/'+info, axiosConfig)\n  },\n\n  getinforesources: function (info) {\n    return axios.get(planning + 'getinforesources/'+info, axiosConfig)\n  },\n\n  getorderplanned: function (info) {\n    return axios.get(planning + 'getorderplanned/'+info, axiosConfig)\n  },\n\n  deleteorderplanned: function (info) {\n    return axios.get(planning + 'deleteorderplanned/'+info, axiosConfig)\n  },\n\n  recoveryorderplanned: function (info) {\n    return axios.get(planning + 'recoveryorderplanned/'+info, axiosConfig)\n  },\n\n  setorderplanned: function (info, content) {\n    return axios.post(planning + 'setorderplanned/'+info,content, axiosConfig)\n  },\n\n  sandbox_planning: function (content) {\n    return axios.post(planning + 'mountsandbox',content, axiosConfig)\n  },\n\n  removesandbox: function () {\n    return axios.get(planning + 'removesandbox', axiosConfig)\n  },\n\n\n  operationslots: function (idorder) {\n    return axios.get(planning + 'operationslots/'+idorder, axiosConfig)\n  },\n\n  mount: function (content) {\n    return axios.get(planning + 'mount/'+content, axiosConfig)\n  },\n\n  explosionCode: function (info) {\n    return axios.post(planning + `getexplosioncode`, info, axiosConfig)\n  },\n\n  deleteop: function (info) {\n    return axios.get(planning + `deleteop/`+info, axiosConfig)\n  },\n\n  changepriority: function (info) {\n    return axios.post(planning + `changepriority`, info, axiosConfig)\n  },\n\n  changestatusactivity: function (info) {\n    return axios.post(planning + `changestatusactivity`, info, axiosConfig)\n  },\n\n  addworkstation: function (info) {\n    return axios.post(planning + `addworkstation`, info, axiosConfig)\n  },\n\n  remoworkstation: function (info) {\n    return axios.post(planning + `remoworkstation`, info, axiosConfig)\n  },\n\n  getfullinfocapacity: function () {\n    return axios.get(planning + `getfullinfocapacity`, axiosConfig)\n  },\n\n  setstandard: function (opp,pxh) {\n    return axios.get(planning + `setstandard/${opp}/${pxh}`, axiosConfig)\n  }\n}\n\nexport {\n    infoplanning\n}\n","var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_c('h4',{staticClass:\"font-weight-bold py-3 mb-4\"},[_vm._v(\"Capacidades por Grupos de Centros de Trabajo\")]),_vm._v(\" \"),_c('div',{staticClass:\"w-100 text-right\"}),_vm._v(\" \"),_c('div',[_c('h3',[_vm._v(\"Seleccione un Grupo de Centros de Trabajo\")]),_vm._v(\" \"),_c('multiselect',{attrs:{\"options\":_vm.workstationGroup,\"placeholder\":\"Grupo de Centros de Trabajo\",\"label\":\"description\",\"track-by\":\"description\"},model:{value:(_vm.selectedGroup),callback:function ($$v) {_vm.selectedGroup=$$v},expression:\"selectedGroup\"}})],1),_vm._v(\" \"),_c('div',{staticClass:\"w-100 text-right mt-2 mb-2\"},[_c('button',{staticClass:\"btn btn-success\",attrs:{\"type\":\"button\"},on:{\"click\":function($event){return _vm.load_groups_ws('')}}},[_vm._v(\"Consultar Por Día\")]),_vm._v(\" \"),_c('button',{staticClass:\"btn btn-success\",attrs:{\"type\":\"button\"},on:{\"click\":function($event){return _vm.load_groups_per_month_ws('')}}},[_vm._v(\"Consultar Por Mes\")])]),_vm._v(\" \"),_c('div',{attrs:{\"id\":\"container2\"}}),_vm._v(\" \"),_c('div',{attrs:{\"id\":\"ctxwsload\"}}),_vm._v(\" \"),_c('sweet-modal',{ref:\"errorWithButtonAlert\",attrs:{\"icon\":\"error\",\"title\":\"Borrar registro\"}},[_vm._v(\"\\n        ¿Está seguro que desea retirar esta orden?\\n        \"),_c('div',{staticClass:\"w-100 text-center\"},[_vm._v(\"\\n            Al retirar la orden de producción, lo hará con todas las partes y los procesos que dependan de esta misma.\\n        \")]),_vm._v(\" \"),_c('template',{slot:\"button\"},[_c('b-btn',{staticClass:\"mr-2\",attrs:{\"variant\":\"danger\"},on:{\"click\":function($event){return _vm.deleteRecord()}}},[_vm._v(\"Retirar\")])],1),_vm._v(\" \"),_c('template',{slot:\"button\"},[_c('b-btn',{attrs:{\"variant\":\"primary\"},on:{\"click\":function($event){return _vm.closeDeleteRecord()}}},[_vm._v(\"Cerrar\")])],1)],2)],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n    <div>\n\n        <h4 class=\"font-weight-bold py-3 mb-4\">Capacidades por Grupos de Centros de Trabajo</h4>\n        <div class=\"w-100 text-right\"></div>\n\n        <div>\n            <h3>Seleccione un Grupo de Centros de Trabajo</h3> \n             \n            <multiselect\n                v-model=\"selectedGroup\"\n                :options=\"workstationGroup\"\n                \n                placeholder=\"Grupo de Centros de Trabajo\"\n                label=\"description\"\n                track-by=\"description\" />\n        </div>\n\n        <div class=\"w-100 text-right mt-2 mb-2\">\n            <button type=\"button\" class=\"btn btn-success\" v-on:click=\"load_groups_ws('')\">Consultar Por Día</button>\n            <button type=\"button\" class=\"btn btn-success\" v-on:click=\"load_groups_per_month_ws('')\">Consultar Por Mes</button>\n            <!-- <b-button class=\"mr-1 mb-1\" type=\"button\" variant=\"outline-success\" key=\"Consultar\" :event=\"counter += 1\">Consultar {{ counter }}</b-button> -->\n        </div>\n\n        <div id=\"container2\"></div>\n\n      \n        <!-- <div class=\"w-100 text-right mt-2 mb-2\">\n            <button type=\"button\" class=\"btn btn-success\" v-on:click=\"content_load('')\">Consultar</button>\n            \n        </div> -->\n\n        <div id=\"ctxwsload\"></div>\n\n        <sweet-modal icon=\"error\" title=\"Borrar registro\" ref=\"errorWithButtonAlert\">\n            ¿Está seguro que desea retirar esta orden?\n            <div class=\"w-100 text-center\">\n                Al retirar la orden de producción, lo hará con todas las partes y los procesos que dependan de esta misma.\n            </div>\n            \n            <template slot=\"button\"><b-btn @click=\"deleteRecord()\" variant=\"danger\" class=\"mr-2\">Retirar</b-btn></template>\n            <template slot=\"button\"><b-btn @click=\"closeDeleteRecord()\" variant=\"primary\">Cerrar</b-btn></template> \n        </sweet-modal>\n\n    </div>\n</template>\n<style src=\"@/vendor/libs/sweet-modal-vue/sweet-modal-vue.scss\" lang=\"scss\"></style>\n<style src=\"vue-multiselect/dist/vue-multiselect.min.css\"></style>\n<script>\n// require(\"@/components/i40/js/@/components/i40/js/vendor/highcharts.js\");\nimport { infoplanning } from \"@/components/i40/js/iplanning\";\nimport Multiselect from 'vue-multiselect'\nimport { infomaster } from \"@/components/i40/js/master\";\nimport { SweetModal, SweetModalTab } from 'sweet-modal-vue' \n\nexport default {\n    components: {\n        Multiselect,\n        SweetModal,\n        SweetModalTab\n        // Scrollable,\n        // datePicker\n    },\n\n    data() {\n        return {\n            item_order:{},\n            calendar1:[],\n            selectedGroup:{},\n            workstationGroup:[],\n\n            selectedWorkstation:{},\n            workstations:[],\n\n            tableData:[],\n            columns: [\n                    {key:'status_modules_code', label:\"Estado\"},\n                    {key:'consecutive_order', label:\"# Orden\"},\n                    {key:'products_code', label:\"Codigo\"},\n                    {key:'products_description', label:\"Descripcion\"},\n                    {key:'order_code', label:\"# Pedido\"},\n                    {key:'name', label:\"Cliente\"},\n                    {key:'requested_date', label:\"Fecha Solicitada\"},\n                    {key:'start_date', label:\"Fecha Inicio\"},\n                    {key:'finish_date', label:\"Fecha Fin\"},\n                    {key:'activity_description', label:\"Actividad\"},\n                    {key:'programed_amount', label:\"Programado\"},\n                    {key:'produced_amount', label:\"Producido\"},\n                    {key:'pending_amount', label:\"Producido\"},\n                    // {key:'description', label:\"Descripción\"},\n                    // {key:'decimal_quantity', label:\"Cifras Decimales\"},\n                    ///Este objeto es fijo en caso de que se necesite modificar la info\n                    {key:'edit', label:\"Editar/Eliminar\"}\n                ],\n            objInfo1:{}\n        }\n    },\n\n    methods: {\n        closeDeleteRecord(){\n            this.item_order = {}\n            this.$refs.errorWithButtonAlert.close()\n        },\n\n        deleteRecord(){\n            infoplanning.removeorderplanned(this.item_order.production_order_id).then(data =>{\n                this.content_load('')\n                this.$refs.errorWithButtonAlert.close()\n            })\n        },\n\n        data_change(item, action){\n            this.item_order = item\n            this.$refs.errorWithButtonAlert.open()\n        },\n        content_load_group(){\n            this.objInfo1 = {\"workstation_id\":this.selectedWorkstation.workstation_id}\n        },\n\n        load_groups_per_month_ws(){\n            document.getElementById(\"ctxwsload\").innerHTML = ''\n\n            this.objInfo1 = {\"workstation_group_id\":this.selectedGroup.workstation_group_id}\n            let categories = []\n            let planned = []\n            let programmed = []\n            \n            infoplanning.calendarcontroller(this.objInfo1, \"select-group-per-month-slots\").then(data =>{\n                \n                let calendarx = data.data\n\n                for (let index = 0; index < calendarx.length; index++) {\n                    const element = calendarx[index];\n                    categories.push(element.start_date)\n                    programmed.push(element.programed_hours)\n                    planned.push(element.planned_hours)\n                }\n\n                let chart_info_calc = {}\n                chart_info_calc.categories = categories\n                chart_info_calc.hoursPlanned = planned\n                chart_info_calc.hoursProgrammers = programmed\n                chart_info_calc.title =\"\"\n                this.load_chart(chart_info_calc,'container2', this.selectedGroup.description + ' por Día')\n            })\n\n            this.load_contentbygroup(this.selectedGroup.workstation_group_id)\n        },\n\n        load_groups_ws(){\n            document.getElementById(\"ctxwsload\").innerHTML = ''\n            \n            this.objInfo1 = {\"workstation_group_id\":this.selectedGroup.workstation_group_id}\n            let categories = []\n            let planned = []\n            let programmed = []\n            \n            infoplanning.calendarcontroller(this.objInfo1, \"select-group-slots\").then(data =>{\n                \n                let calendarx = data.data\n\n                for (let index = 0; index < calendarx.length; index++) {\n                    const element = calendarx[index];\n                    categories.push(element.start_date)\n                    programmed.push(element.programed_hours)\n                    planned.push(element.planned_hours)\n                }\n\n                let chart_info_calc = {}\n                chart_info_calc.categories = categories\n                chart_info_calc.hoursPlanned = planned\n                chart_info_calc.hoursProgrammers = programmed\n                chart_info_calc.title =\"\"\n                this.load_chart(chart_info_calc,'container2', this.selectedGroup.description + ' por Día')\n            })\n\n            this.load_contentbygroup(this.selectedGroup.workstation_group_id)\n        },\n\n        load_contentbygroup(wsgrpid){\n\n            for (let index = 0; index < this.workstations.length; index++) {\n                const element = this.workstations[index];\n                if(element.group_id==wsgrpid){\n                    const div = document.createElement('div');\n                    div.className = 'row mt-2';\n                    div.id=element.code\n                    document.getElementById('ctxwsload').appendChild(div);\n\n                    this.content_load(element, element.workstation_id)\n                }\n            }\n            \n        },\n\n        content_load(idcontent, wsid){\n            this.objInfo1 = {\"workstation_id\":wsid}\n            let categories = []\n            let planned = []\n            let programmed = []\n            // console.log(this.objInfo1)\n            infoplanning.calendarcontroller(this.objInfo1, \"select-workstation-slots\").then(data =>{\n                    if(data.data.length >0 && data.data != \"Invalid Option\" ){\n                        this.calendar1 = data.data\n\n                        for (let index = 0; index < this.calendar1.length; index++) {\n                            const element = this.calendar1[index];\n                            categories.push(element.start_date)\n                            programmed.push(element.programed_hours)\n                            planned.push(element.planned_hours)\n                        }\n\n                        let chart_info_calc = {}\n                        chart_info_calc.categories = categories\n                        chart_info_calc.hoursPlanned = planned\n                        chart_info_calc.hoursProgrammers = programmed\n                        chart_info_calc.title =\"\"\n                        this.load_chart(chart_info_calc,idcontent.code, 'Centro de Trabajo ' + idcontent.code +' por Día')\n\n\n                        // infoplanning.workstationslots(this.selectedGroup.workstation_id).then(data =>{\n                        //     console.log(data)\n                        //     // if(data.data.length >0 && data.data != \"Invalid Option\" ){\n                        //     //     this.calendar1 = data.data\n\n                        //         // for (let index = 0; index < this.calendar1.length; index++) {\n                        //         //     const element = this.calendar1[index];\n                        //         //     categories.push(element.start_date)\n                        //         //     planned.push(element.planned_hours)\n                        //         // }\n\n                        //         // let chart_info_calc = {}\n                        //         // chart_info_calc.categories = categories\n                        //         // chart_info_calc.hoursPlanned = planned\n                        //         // chart_info_calc.hoursProgrammers = []\n                        //         // chart_info_calc.title =\"\"\n                        //         // this.load_chart(chart_info_calc)\n                        //     // }\n                        // })\n\n                        //  for (let index = 0; index < this.calendar1.length; index++) {\n                        //     const element = this.calendar1[index];\n                        //     categories.push(element.start_date)\n                        //     planned.push(element.planned_hours)\n                        //  }\n\n                        // let chart_info_calc = {}\n                        // chart_info_calc.categories = categories\n                        // chart_info_calc.hoursPlanned = planned\n                        // chart_info_calc.hoursProgrammers = []\n                        // chart_info_calc.title =\"\"\n                        // this.load_chart(chart_info_calc)\n                    }\n                })\n\n            infoplanning.calendarcontroller(this.objInfo1, \"select-workstation-details-slots\").then(data =>{\n                // console.log(data)\n                    if(data.data.length >0 && data.data != \"Invalid Option\" ){\n                        if(data.data != \"\")\n                            this.tableData = data.data\n                        else\n                            this.tableData = []\n                    }\n                })\n           \n            // infoplanning.getplanninginfo(info_send,'analyze').then(data => {\n            // })\n\n        },\n\n        load_chart(chartInfo, docid, subtitle){\n            \n            Highcharts.chart(docid, {\n                chart: {\n                    zoomType: 'x'\n                },\n                title: {\n                    text: subtitle\n                },\n                subtitle: {\n                    text: 'Horas Programadas vs Horas Planeadas'\n                },\n                xAxis: [{\n                    categories: chartInfo.categories,\n                    crosshair: true\n                }],\n                yAxis: [{ // Primary yAxis\n                    labels: {\n                        format: '{value}',\n                        style: {\n                            color: Highcharts.getOptions().colors[1]\n                        }\n                    },\n                    title: {\n                        text: 'Horas Planeadas',\n                        style: {\n                            color: Highcharts.getOptions().colors[1]\n                        }\n                    }\n                }, { // Secondary yAxis\n                    title: {\n                        //text: 'Rainfall',\n                        style: {\n                            color: Highcharts.getOptions().colors[0]\n                        }\n                    },\n                    labels: {\n                        format: '{value} mm',\n                        style: {\n                            color: Highcharts.getOptions().colors[0]\n                        }\n                    },\n                    opposite: true,\n                    visible: false\n                }\n                ],\n                tooltip: {\n                    shared: true\n                },\n                legend: {\n                    layout: 'vertical',\n                    align: 'left',\n                    x: 0,\n                    verticalAlign: 'top',\n                    y: 0,\n                    floating: true,\n                    backgroundColor: (Highcharts.theme && Highcharts.theme.legendBackgroundColor) || 'rgba(255,255,255,0.25)'\n                },\n                series: [{\n                    name: 'Horas Programadas',\n                    type: 'column',\n                    data: chartInfo.hoursProgrammers,\n                    tooltip: {\n                        valueSuffix: ' h'\n                    }\n\n                }, {\n                    name: 'Horas Planeadas',\n                    type: 'line',\n                    data: chartInfo.hoursPlanned,\n                    tooltip: {\n                        valueSuffix: ' h'\n                    }\n                }]\n            });\n        },\n    },\n     created() {\n\n          infomaster.group([],\"select\").then(data => {\n                    \n                    // this.workstationType = data.data[0].wstype\n                    // this.workstationPlant = data.data[0].wsplant\n\n                    this.workstationGroup= data.data\n                    \n                    // if( data.data[0].workstation != null){\n                    //     this.tableData = data.data[0].workstation\n                    //     this.totalRows= this.tableData.length\n                    // }\n                })\n\n         infomaster.workstation([],\"select\").then(data => {\n                    \n                    // this.workstationType = data.data[0].wstype\n                    // this.workstationPlant = data.data[0].wsplant\n                    this.workstations= data.data[0].workstation\n                    // if( data.data[0].workstation != null){\n                    //     this.tableData = data.data[0].workstation\n                    //     this.totalRows= this.tableData.length\n                    // }\n                })\n     },\n    \n}\n</script>\n","import mod from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./grload.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../../node_modules/cache-loader/dist/cjs.js??ref--12-0!../../../../node_modules/thread-loader/dist/cjs.js!../../../../node_modules/babel-loader/lib/index.js!../../../../node_modules/cache-loader/dist/cjs.js??ref--0-0!../../../../node_modules/vue-loader/lib/index.js??vue-loader-options!./grload.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./grload.vue?vue&type=template&id=53965b3e&\"\nimport script from \"./grload.vue?vue&type=script&lang=js&\"\nexport * from \"./grload.vue?vue&type=script&lang=js&\"\nimport style0 from \"@/vendor/libs/sweet-modal-vue/sweet-modal-vue.scss?vue&type=style&index=0&lang=scss&\"\nimport style1 from \"vue-multiselect/dist/vue-multiselect.min.css?vue&type=style&index=1&lang=css&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../../node_modules/vue-loader/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports","import mod from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!./sweet-modal-vue.scss?vue&type=style&index=0&lang=scss&\"; export default mod; export * from \"-!../../../../node_modules/mini-css-extract-plugin/dist/loader.js??ref--8-oneOf-1-0!../../../../node_modules/css-loader/dist/cjs.js??ref--8-oneOf-1-1!../../../../node_modules/vue-loader/lib/loaders/stylePostLoader.js!../../../../node_modules/postcss-loader/src/index.js??ref--8-oneOf-1-2!../../../../node_modules/sass-loader/dist/cjs.js??ref--8-oneOf-1-3!./sweet-modal-vue.scss?vue&type=style&index=0&lang=scss&\"","import mod from \"-!../../mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../vue-loader/lib/loaders/stylePostLoader.js!../../postcss-loader/src/index.js??ref--6-oneOf-1-2!./vue-multiselect.min.css?vue&type=style&index=1&lang=css&\"; export default mod; export * from \"-!../../mini-css-extract-plugin/dist/loader.js??ref--6-oneOf-1-0!../../css-loader/dist/cjs.js??ref--6-oneOf-1-1!../../vue-loader/lib/loaders/stylePostLoader.js!../../postcss-loader/src/index.js??ref--6-oneOf-1-2!./vue-multiselect.min.css?vue&type=style&index=1&lang=css&\""],"sourceRoot":""}